# 다이나믹 프로그래밍
# 가로 N, 세로 2인 직사각형을
# 1 * 2, 2 * 1, 2 * 2 타일로 채우고자 한다.
# 바닥을 채우는 모든 경우의 수를 구하라.

# 첫째 줄에 N이 주어진다. (1 <= N <= 1000)

def solution(N):
    # 왼쪽부터 채웠을 경우
    # 마지막 i번째에 올 수 있는 타일은 3가지 경우
    # 1) a(i - 1) + 2 * 1
    # 2) a(i - 2) + 2 * 2
    # 3) a(i - 2) + (1 * 2) * 2개
    # a(i) = a(i-1) + a(i-2) * 2

    d = [0] * 1001
    d[1] = 1
    d[2] = 3
    for i in range(3, N+1):
        d[i] = d[i-1] + d[i-2] * 2 % 796796
    return d[N]


print(solution(N=3))
